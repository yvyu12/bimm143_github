---
title: "Class 8: Breast Cancer Mini Project"
author: "Yvonne Yu A16333006"
format: pdf
---

## About

Today's lab we will work with with fine needle aspiration (FNA) of breast mass data from the University of Wisconsin. 

## Data Input

```{r}
# Save your input data file into your Project directory
wisc.df <- read.csv("WisconsinCancer.csv", row.names = 1)
head(wisc.df)
```

> Q1. How many observations/patients/individual/samples are in this dataset?

```{r}
nrow(wisc.df)
```
> Q2. How many of the observations have a malignant diagnosis?

```{r}
sum(wisc.df$diagnosis == "M")
table(wisc.df$diagnosis)
```

> Q3. How many variables/features in the data are suffixed with '_mean'?

```{r}
inds <- grep("_mean", colnames(wisc.df))
length(inds)

colnames(wisc.df[,(grep("_mean", colnames(wisc.df)))])
```

## Initial Analysis

Before analysis I want to take out the expert diagnsoses column (aka the answer) from our dataset. 

```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
head(diagnosis)
```
```{r}
wisc.data <- wisc.df[,-1]
head(wisc.data)
```

## Clustering

We can try a kmeans() clustering first.

```{r}
km <- kmeans(wisc.data, centers = 2)
```

```{r}
table(km$cluster)
```
Cross-table

```{r}
table(km$cluster, diagnosis)
```

Let's try `hclust()`. the key input required for `hclust()` is a dinstance matrix as produced by the `dist()` function. 

```{r}
hc <- hclust(dist(wisc.data))
hc
```

I can make a tree like figure 

```{r}
plot(hc)
```

## PCA

Do we need to scale the data?

We can look at the sd of each column (original variable)

```{r}
round(apply(wisc.data, 2, sd))
```

Yes we need to scale. We will run `prcomp()` with `scale=TRUE`.

```{r}
wisc.pr <- prcomp(wisc.data, scale = TRUE)
summary(wisc.pr)
```

Generate our main PCA plot (score plot, PC1 vs PC2 plot)

```{r}
library(ggplot2)
res <- as.data.frame(wisc.pr$x)
```

```{r}
ggplot(res, aes(PC1, PC2, col = diagnosis)) + geom_point()
```
## Combining Methods

Clusterng on PCA Results

Using the minimum number of principal components required to describe at least 90% of the variability in the data, create a hierarchical clustering model with the linkage `method="ward.D2"`. We use Wardâ€™s criterion here because it is based on multidimensional variance like principal components analysis. Assign the results to `wisc.pr.hclust`.

```{r}
d <- dist(wisc.pr$x[,1:3])
hc <- hclust(d, method= "ward.D2")
plot(hc)
```
To get my clustering result/membership vector, I need to "cut" the tree with the `cutree()` function.

```{r}
grps <- cutree(hc, k = 2)
```

> Q. How many patients in each group? 

```{r}
table(grps)
```
```{r}
plot(res$PC1, res$PC2, col = grps)
```

## Prediction

We can use our PCA result (model) to make predictions, that is take new unseen data and project it on to our new PC variables. 

```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(res$PC1, res$PC2, col = grps)
points(npc[,1], npc[,2], col = "blue", pch = 16, cex =3)
text(npc[,1], npc[,2],labels=c(1,2), col = "white")
```


> Q. Which of the patients would I prioritize for more follow up?

Patient 2 would be prioritized because the points were identified to be malignant. 

# Summary

Principal Component Analysis (PCA) is a super useful method for analyzing large datasets. It works by finding new variables (PCs) that capture the most variance from the original variables in your dataset. 

